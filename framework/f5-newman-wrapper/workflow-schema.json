{
	// Name your workflow.  Used to generate a run ID and default names for output
	"name":"WORKFLOW_NAME_HERE",

	// Specify the file containing postman/newman global variables.  This file should is generated by
	// the f5-postman-workflows package
	"globalEnvVars":"../path/to/f5-postman-workflows/generated/globals.postman_globals.json",

	// Global options are passed for each workflow item to newman
	// Ref: https://github.com/postmanlabs/newman#api-reference
	"globalOptions": {
		"insecure":true,
		// Turn disable CLI output remove this attribute or specify a empty array (e.g. "reporters":[])
		"reporters":["cli"]
	},

	// The variables specified here are passed to each collection run
	// These variables are NOT postman/newman global variables.  These variables
	// are cloned into the environment for each item in the workflow
	"globalVars": {
		"key1":"value1",
		"key2":"value2",
		"key3":{
			"environment":"my_environment_file.json",  // The env file name is OPTION.  If not specified the value of 'globalVarsIncludeFile' is used
			"key":"key_name_to_find"  // The key name is OPTIONAL.  If not specified it's inherited from the object name (e.g. 'key3')
		}
	},
	// The name of defaults environment include file (see key3 above)
	"globalVarsIncludeFile":"my_environment_file.json",

	// OPTIONAL, Save the environment variables to a file once complete
	"saveEnvVars":true,

	// OPTIONAL, Filename prefix to use for output files
	"outputFile":"/path/to/save/workflow/run/report",

	// An ordered array containing items defining the workflow
	"workflow": [
		{
			"name":"Action 1 - Parent",

			// OPTIONAL, Specific items can be skipped, children are still processed
			"skip":false,

			// Item options are passed for this item to newman
			// Ref: https://github.com/postmanlabs/newman#api-reference
			"options": {
				// REQUIRED, the collection to run.  This can be a file or the JSON for the collection.
				"collection":"/path/to/postman/collection.json",

				// OPTIONAL, the folder in the collection to run
				"folder":"COLLECTION_FOLDER_TO_RUN",

				 // Environment variables can be specified in a compact format here.  Variables in globalVars
				 // will be merged here with item-specific variables taking precedence
				"envVars": {
					"key1":"item_value", // Item-specific variable takes precendence over globalVars.key1
					"key3":"value3"
				},

				// Environment variables can also use the native postman/newman format.  Variables in
				// envVars{} will automatically be remapped with variables in environment{} taking precedense
				"environment": {
					"values": [
						{
						  "key": "key4",
						  "value": "value4",
						  "type": "text",
						  "enabled": true
						},
						{
						  "key": "key5",
						  "value": "value5",
						  "type": "text",
						  "enabled": true
						}
					]
				},

				// The wrapper enables remapping of global and local environemnt variables to easily
				// chain collections together into a workflow.
				//
				// Remap a Global Variable to a new name for this item BEFORE running the collection
				"remapPreRun": {
					"globalVar_key":"new_key_name",

					// This would remap the "key1" globalVar to "action1_key1" for this item
					"key1":"action1_key1"
				},

				// Remap a item variable to a new name AFTER running the collection
				"remapPostRun": {
					"item_var_key1":"new_key_name",
					// This would remap the "action1_key1" variable to "key1"
					"action1_key1":"key1"
				}
			},

			// Child items will be run in order after completion of the parent.  Children can be nested
			// and use the same item schema as defined above
			"children": [
				{
					"name":"Action 1 - Child 1",
					"skip":false,
					"options": {
						"collection":"/path/to/postman/collection.json",
						"folder":"COLLECTION_FOLDER_TO_RUN",
						"remapPreRun": { },
						"remapPostRun": { }
					},
					"children": []
				},
				{
					"name":"Action 1 - Child 2",
					"skip":false,
					"options": {
						"collection":"/path/to/postman/collection.json",
						"folder":"COLLECTION_FOLDER_TO_RUN",
						"remapPreRun": { },
						"remapPostRun": { }
					},
					"children":[
						{
							"name":"Action 1 - Child 2 - Child 1",
							"skip":false,
							"options": {
								"collection":"/path/to/postman/collection.json",
								"folder":"COLLECTION_FOLDER_TO_RUN",
								"remapPreRun": { },
								"remapPostRun": { }
							},
							"children":[]
						}
					]
				}
			],
		},
		{
			// Items can act as organizing containers for children by specifying skip:true
			"name":"Action 2 - Parent",
			"skip":true,
			"children": [
				{
					"name":"Action 2 - Child 1",
					"skip":false,
					"options": {
						"collection":"/path/to/postman/collection.json",
						"folder":"COLLECTION_FOLDER_TO_RUN",
						"remapPreRun": { },
						"remapPostRun": { }
					},
					"children": []
				},
				{
					"name":"Action 2 - Child 2",
					"skip":false,
					"options": {
						"collection":"/path/to/postman/collection.json",
						"folder":"COLLECTION_FOLDER_TO_RUN",
						"remapPreRun": { },
						"remapPostRun": { }
					},
					"children":[]
				}

			]
		}
	]
}